{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Colab's New Code Editor",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true,
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/EduardoMoraesRitter/colab/blob/master/document-clustering\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wUy_RYQq3_e7",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "outputId": "58fe01f9-7fcc-423b-d581-bcd6fec3be53"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.cluster import MiniBatchKMeans\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "from sklearn.decomposition import PCA\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "\n",
        "from sklearn.datasets import load_files\n",
        "\n",
        "# for reproducibility\n",
        "random_state = 0 \n",
        "\n",
        "DATA_DIR = \"./bbc/\"\n",
        "data = load_files(DATA_DIR, encoding=\"utf-8\", decode_error=\"replace\", random_state=random_state)\n",
        "df = pd.DataFrame(list(zip(data['data'], data['target'])), columns=['text', 'label'])\n",
        "df.head()\n",
        "\n",
        "vec = TfidfVectorizer(stop_words=\"english\")\n",
        "vec.fit(df.text.values)\n",
        "features = vec.transform(df.text.values)"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.collections.PathCollection at 0x7f2787548a90>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n9gac094ijPveupUzLhxcp7YrSlOiFjFXgnr3s9/Ysy+3zmEP/nu1nfouoU3yCvaa49nKNH/Y69ey\nlwkki6+5cvQL5X38mgYWq8mka7PweHQem96BTSkReFwaToeOAIwdmXz9yTJ2ZBcGzKQF0AyNuIQW\nDJsY9O+1oihBqJu2zdh3v6Ti8dYw/Ka2pAQhEAI69v+VFkVZpOae769B74Okzikkd16FtbWdH7+I\nYeCoQqJifFhsEN9Zw92lNRlbMgO6gQDwmZjr9/DJpnRk+3i03GK0An8fvy3MyuM/PMRvf+7EajE4\nrU97LJbaj/ZRlOZIBX4zVptSAhbD/yXQU0OdGyAg9K//x2zuvvf88qc6nbIESTifbBlBizdXIV0m\n0x/LZN7uYWzfH4d+ssTdpQ2WlO3omfmH2wcIlwf3Gb3KG6tl5mNduQ2v1+Tq617FaO0f3aNpgqf+\neSF9e1Yu1KooShnVpdOMjRvRG2s1V8W6LrBZDf5x6zjeevpqRg/vQUT44RlKAdfilerPP//mXwOO\ntXP9SCQCKQRFcYm4nRov3teGtO3ReH0GLo8FabXgHtQNM9J++FiawEyMAYsBXh9G2gH09Gz/TVuX\nG29hCcUlbopL3BQWu7jn0c9x1lBeWVGaO3WF34xdfdEQUtbtYVd6Di63F6tFR9d1hpzWkdatWjD+\nrJNIbusfw//IXecjpeSim17nYHZh1aGaQgSO1umaQqe+S8ofg7+PX0ZUmNaangedK6zJqwm8nVph\nXb8H3ZBYIuDqB9LoEPkb/766PW6Xhun1fxBggmkPnCIrgd9W7+CsoT1C/8tSlCZABX4zFma38tp/\nrmDV+j1s3p6B0+UhbVcWmdmFdOuUSHxs4BDHjKwC8qtZmDxY2JfdyAX8oe+T9HC9WfoC/JOxKtI0\nZLiNiGgv4y7P5ZKbs4hJ8HLb2G44iw9/xAhTIgFjZyaehKjy7aZpkneoiF8+X4HpM+l/zilExqhh\nmopSRgV+M6dpgoGndGDnnmzem/MbTpd/6OO2nQf5+od1vP3M1YSH+a+kLYZOsGG8AWHfJaXCjFuJ\nEMIf+iYc2DEQg4N0510Q4GsdOLvW0LyQlc+oC/OY/vABAEqKNXamhlF5+pcA9Iw8KnbgeNw+3rj6\nRSweHxKJz2vyt9emM+bKESH5XSnKiU714SsUO1y89tEv5WEP4HJ7ycot4qvv1pZvS4iLpHNyApoW\n2GcfeGX/U3mX/ul9d9E6roAIvYQekR/SXlvIXsazXb+aDmdasMYfvt6wGF5axjqwpmex9LtYXnqg\nDdvWhaEbElFdAX/TRDhc/kZ4fYhNe/HkFuEoLKGk0Im7xM2z018jY9fB0P7CFOUEpQJfYfP2TAyj\n6l8Fl9vLryvTArbNuPt84mMjsNv8YS2lRklB/OFuHK10tpXHyz+nLeHTf8/m2//N4oVHf+KWKc9y\nUtuFuFp2ZcBFgnMGbiExrpBWsQVcNmodr939BTabF2dbK1+/F8/dF3Rl7tsJDBxdgBakfZgS2+L1\n6DszsS7fgmVz5YXW/Cth/TR7WWh+UYpyglNdOgrRUXZ8lfvT8Q++iavUB94mMYbPXpnOgh/W8exb\nP+LFpNewLw9XyyylHSzAqFBis89AB30G7uZeeSd7M2IYOukDLOF5dD1lMboOq7e2ZXTPTbg8Oi3O\ns5C30ofLCe8+2Zqk8y9gg6U3PT1Po1U4pgB//f21u6t9bz6vSUlhaFffUpQTVZ2u8IUQcUKI74UQ\n20r/H1vNft8KIfKEEF/X5XxK/ejaoSWtW0YHdNUA2CwGl5zXr8r+hq4xaeypdEpOQNcEmhYY9jab\nBVuXRAp97fDKqoP9X5k7EN2Wz94tg9i8+mwcTgvb0uN54KUziX02HM8W/5h/KWGz9xremXMVgwZs\nxWI9+iGX1jArQ85Xs3EVBerepXM/sFhK2Q1YXPo4mKeBq+p4LqWeCCF45sGLSG4Th91mEBFuxWY1\nuOXqEZzSu121r3vyH5Pp0C4eu81CRLgVq9Xg2kuG8saTV/L1O7eyyT6BXK+NElNHSn+RS58pWLEp\nmQ59l5LUNaW8yqbbY5BhtEGPFxTPdZfX4NnlO5+O+nyK9vyI0GxH9b7sETbOumwYvQZ3q+uvSFGa\nhLp26UwCRpb+/B6wBPh75Z2klIuFECMrb1caj9Yto5n13DXs2JNNQZGTHp0Ty0fnVKdVfBTvzZzG\n9t3Z5BeW0KNzIpERh0PZq/fhX/v7cZI9l3ZWBxOj92CaAilF1SGbQOe+i8m+phjpCFyIvIvvfWS6\nhoywYkhZpYhaMIbV4JEv7+O00X0RanVyRQHqfoWfKKU8UPpzBpBYl4MJIaYLIVKEEClZWVl1bJpy\ntIQQdOnQktP6tD9i2Fd8TdeOLenfNzkg7AH6xfbHh52UkpZ8ld+BXK+V3WYkPUbsxdbKUR76ZVf6\nOZuHoHvMgLD3L0QOwmcihcbpFw7GsOhoukbPwd1olRxfpU2aJjh98iD6jTlZhb2iVHDE8shCiB+A\n1kGeegB4T0oZU2HfQ1LK6vrxRwL3SCkn1KZhqjxy0/B9xmI+2fsZPukjTLjwoiEluDwGrvQw9n3e\nHs2UpK0dXX6lDwSEfRkjzGDBrjx8rn34REdsCfew4Y+W/PPcx/C4vfi8Piw2C/YIGy+nPEnrjq2q\nNkhRmrg6LWIupax2+SAhRKYQIklKeUAIkQSoAc9KgLNbj+bkmJN4buv/OODMQJZW4REWSXiHYjqO\nSWfXomQ69V0SEPiVwx6gV79C8G1HN0BnM/LQbZw06AVeXfM0X76wkD2p++gzvAcTbxlHbKsWx/Nt\nKsoJoa59+POAacATpf+fW+cWKU1OnDWOTNfB8rAvY2oC2dWJ/NY/eauireIaust3SxdGB5tdctPD\neysd2YkseJq2XRdw2wvX1et7UJSmoK59+E8AZwshtgFjSh8jhBgghHizbCchxC/AZ8BoIUS6EGJs\nHc+rnEBMaSJlNeWVdRkwU3fY5GdI6prCXjmebRHTiUiIZvik/jz91XY69Qmy4LovLWi5B0VRqqrT\nFb6UMgcYHWR7CnB9hcdn1OU8yonNpttoZ7Oyx+WkYk0c6YPfH7uy2oJre9LOxmwTgxm9kB9fm4ph\nmIwfuplbLvwdm6XCwi2elWAddHzflKKcgFRpBeW4uL7dSYQJHxb8QW3Bx58vXMr270eUh72UWtk6\nKuWjd9K3DSRl2Xh8pobbY7Dgt578+51RSAlutwWQSOf3DfvmFOUEoQJfOS6SY6fwn7abOL/FXgaF\nHST35fPYMHssXUcvodPJPyGlRuryyf7FUiqFftnkLCnB7TH4bUN7br7/YSZNewW32w4irKHfnqKc\nEFQtHeW4EFocMQmvc75xB27Xfubtbsu1V3+CZ/p3HFqRQN6KeMKicwIWS6nYvVNSEI+UGmCyY91Z\nLNkymDtueAeLRSLCJtZ4bq/PZMXqHezLyKNbx1acdlJ7NT5faZZU4CvHjbCeBi2XYvNtZ94CjVWp\nrXls4XriRmUQfcohWqzKhTepFPqyvLtHCLP8Bu+N0z7mv4/MRETfjzC6VnvOrJxCbnrgYwqLnHg8\nPgxDo2O7eJ7/v0trPblMUZoKFfjKcSWEAKMrNgP69nRS9GQcjj1hRPbOR7P56NT3J6Bi6P+EEBI4\nHPbDR67n5ZfDEfalCC2uxvM9/uK3ZOUUYpr+kTwer4+03Vm89ckybr/mrHp9r4rS2Kg+fKXBrNmY\njs1q4Mm1cejXVhz6JbF8hazDffdnAZLdG0ZwIG0AYyccYMn3fdDCJx0x7F0uD6s37i0P+zIej49F\nSzcdc7t9Ph8HdmRSlFd8zMdQlIagrvCVBlO2iEpllQurlV3tXzw9nU9fbVdlBi74w/2r79YyZ+Gf\n5BeWEBFmZeyI3od3kBI9LQPLtv3g8uKKieDPH9dz2qi+R9XmHz/+hZf++jZupwef12TIhH7c8/at\nhEepG8dK43fEWjoNRdXSafq8Xh+Trn+V/GoWKJESln95T/ljn09WqdkP4PZ4uekfH5G2Kwuzwt9n\nTRNYDB23x4u+cS9GWgbCd3gCmC3cylPfP0zvoT1q1d71v6Tyj3MfxeVwl2+z2Az6jTmZR+f/o1bH\nUJT6VlMtHdWlozQYw9B55sELiY60Ex5mJazCFX/ZWrkV3X23INj1yeJlW9iVnhsQ9gCmKZFSYjf0\nKmEP4HK4ee9fn+B2uvlp9jI+evwL/vjmT3w+H5Wl/r6NhyY+ERD2AB6Xlz8Xryd7f+5RvntFOf5U\nl47SoHp1TWLumzeTsm43xSVuEhMiee3DZXw5uysH0vozdMQOFn3dlocfsvHcc/7XzJxJQLfO8pTt\nuD3Ba+S7PT5GnNSO1RYdr69qeYeNy7dwaZvpmF4fLocLW7iNpC6JPPvzv8u7aXanpnPv6P+rEvZl\nDKtB7oFDJLSp+Z6CojQ0FfhKg7NYdIb27wz4r+wtRZexPw3uuEPy7LOdEcIf8kDQ0I+PjQhyVD9D\n1+jQtQ1rNY1gHwkuhzsgyEuKnOxJTefdh2dzy7PXAvD8za9XG/YAPo+P9j3a1P4NK0oDUV06SqMh\nJdx1lz/U77wTnn1WlId6Wejfeaf/+bvuorx7Z8hpnao9pqYJLjjvNC66czy28Notkeh1+/jqhW/4\n6sVvyNyTxfpfUqvd12q3cMWDFxEWqW7aKo2fusJXGoXKYV+52wao9kp/z/5DGLoWtMvmrKHdaRUf\nxbQZlxHeIoxPnppLYU5RLdojeev+D1mzeD1CiGorct76wnWcd32V+oGK0iipK3ylUfB4IDW1+rAv\nU/FKPzXV/zqr1cAwqv5VNgyNju39SyBqmsZl917AR7tfRdNr99fe6XCx6vt1SDN42PcY2EWFvXJC\nUYGvNApWK8ybV3PYlykL/Xnz/K8bMbhb0NE7uqYxenjPgG32cBsnj+h9VKFvC69agkE3NO568+Za\nHUNRGgsV+EqjYbUeOezLCOHfHyC2RTgP3Xku4fEm4TGCMLsFq0XnrhvG0CYxpspr733nVuKSYgmL\nCsOw6NgjbOiGHvQ8LdvFM+KSYdgrLNBuj7Ax6dZxdO7b4ajfo6I0pDr14Qsh4oBPgI7ALuBSKeWh\nSvucCrwCRAM+4DEp5Sd1Oa+iVLQxfxNzbW+TfEMRPtOkpdmWv/a8mXaxwRcxb9U+gVnbX2TF16s4\nsOMgXU7tiLPYyeNTn8NVcng0ji3cyvVPXsFZU05n5GXDWPzhL2iGxjlXj+SUkX2O19tTlJCp00xb\nIcRTQK6U8gkhxP1ArJTy75X26Q5IKeU2IUQbYBXQS0qZV9Ox1UxbpTYySjJ4aOMjuM3DQa2j0za8\nDTP6/OuoyiD/vmAVb97/Ifu3Z5DYoSXXPnY5Z1w4uD6arSj1pqaZtnUdpTMJGFn683vAEiAg8KWU\nWyv8vF8IcRBoCdQY+IpSG98fXIzXDBxh78NHpvMgux176BhR+26XweP7M3h8/1A3UVEajbr24SdK\nKQ+U/pwBJNa0sxBiEGAFtlfz/HQhRIoQIiUrK6uOTVOasoySDJYc/JlthWmYVB2OqSHIdatyB4pS\n0RGv8IUQPwCtgzz1QMUHUkop/IXLqztOEjALmCalrPov1H+M14HXwd+lc6S2Kc2PlJJ3dr7H8pzf\nEPgwpUnFhdHLeKSXDuHJx7+BitKIHTHwpZRjqntOCJEphEiSUh4oDfSD1ewXDSwAHpBSrjjm1irN\n3orcP1iRuwKPLOvGEYCs8DMYwmB4wlDibfEN0URFabTq2qUzD5hW+vM0YG7lHYQQVuBL4H0p5Zw6\nnk9p5n48+BMu01Npq0BDEi5Kt0vYkL+JXPehKq9XlOasroH/BHC2EGIbMKb0MUKIAUKIN0v3uRQ4\nE7hGCLGm9L9T63hepZnyVAl7PxNBidQBiRcvue4cXt3+BuDvBpLenUjv3uPYUkVpfOo0SkdKmQNU\nmVsupUwBri/9+QPgg7qcR1HKDIkbzD7HDtyy8rWKQFboy5fA9qI0HCW/YS/8B5i5gETqyYjYFxBG\nl+PZbEVpFNRMW+WEMirxLNraorGJskVKqr+3HyHc2PJvBnM/4ARc4EtD5lyBlNWXO1aUpkoFvnJC\nsWoWHujzNNcltSRedxJshE6ZMyNzEFRevUoCLnD9WJ/NVJRGSQW+csKx6FYGt3uajlE1T5LqEdEC\ncFV9QnrBF3RAmaI0aSrwlRPW8JYjMUT1t6ESo8eDCA/yjADrafXXMEVppFTgKyesfjGnMTBuAKJS\nt46GYGDMAFpGXwJ6/AyxTwAACAVJREFUJ6DCSlciDGzDEJa+x7exitIIqBWvlBOWEIIbO1/PWS1H\nMH//AtJL0om2RDMmcRSnJwxHCA3iP0IWvwMl80BY+P/27j9GivqM4/j7s3fc9eDwODgLWAi0KTRt\nWoOG2PSnNkJCkwY1WGqTJhhKia3GNCZNSPjP/iO2NWkTWyX6B23aSCWKGNsYpFITK1TSKhWtHto0\nUA4EDkjh6P3gnv6xo7fe7d4tLjtz7Hxeyea+M/PdzHNP5p6b+e7sfGlbjaZ+O+vQzTJR09My68lP\nyzQzu3jjPS3TQzpmZjnhgm9mlhMu+GZmOeGCb2aWEy74ZmY54dsyLXcihmHgL8TAX1HhSmj7Bip0\nZh2WWd254FuuRAwQvWth6DWIPoJWOPsAdD6KWq7NOjyzuvKQjuVK9D0Gg/sh+pI1/RDniNN3U2Hm\nTbOGUVPBlzRT0k5J3cnPMdfFkhZI+lsy8ckBSXfUsk+zmpx/kuKjkkeJszDUnXo4Zmmq9Qx/A7Ar\nIhYBu5Ll0XqAL0TEEuDzwAZJV9W4X7MPqcIhHwFqSjcUs5TVWvBvArYk7S3AzaM7RMRARLz3jNrW\nS7BPswlF/0sM965n+MQtDP/358RwMr9t2zeBtrFvKMyEJs+CZY2t1uI7OyJ6kvZRYHa5TpLmS9oP\nHAI2RcSRCv3WS9onad/x48drDM3yavjcb4lTd8DAbhg6AOceJo5/neELvWjqrdD6RYpFv7n4+GRN\nR50PIlWeTMWsEUx4l46k54A5ZTZtLF2IiJBU9klsEXEIuDoZytkuaVtEHCvTbzOwGYoPT6sifrMP\niDgPZ+8HzpesHYLohRMrYNYTaMYvicFXoO9xGO6BKdfgC0/LgwkLfkQsq7RN0jFJcyOiR9JcYNxp\nhCLiiKTXgK8A2y46WrOJDP4TqDAWH6eJU+ug4xfQuxY4V1w/8CJx7iGibRW64l6f6VvDqvW0Zgew\nJmmvAZ4a3UHSPEltSbsT+DLwZo37NSuvMLM4hWElF45A7y28X+zfNwTnt0P/7joGZ5atWgv+fcBy\nSd3AsmQZSUslPZL0+TSwV9KrwJ+Bn0bEP2rcr1lZal4AUz41To8ABits6yfOP1GHqMwmh5q+aRsR\nJ4Eby6zfB6xL2juBq2vZj9nF0IxfESdXFcfnxygzqfkH+MtX1rj8SZU1HDV1oa4/QGEe0PLeWmAK\n4x/yTahtzJ3FZg3Dz9KxhqTCNOh6mujbCv27oDALht6AC/+u/KbWG6B1zAWrWcNwwbeGpcI01L4W\n2tcCMHx0nJHFqXej6Xf6Dh1raB7SsRwZ53BvX+9ibw3PBd9ypFJBb0JxJtVIzLLggm/5MeWTFTa0\nQKEj1VDMsuCCb7mh9h8CHxm1tg3a1yG1lHuLWUNxwbfcUOuXoONn0DQPEKgD2u9E0+7KOjSzVPgu\nHcuVQttyaFtOxCDQ7A9qLVdc8C2XpClZh2CWOg/pmJnlhAu+mVlOuOCbmeWEC76ZWU644JuZ5YQL\nvplZTrjgm5nlhAu+mVlOKCKyjqEsSceBcWarmJS6gBNZBzFJOBcjnIsRzsWIeuViQURcWW7DpC34\nlyNJ+yJiadZxTAbOxQjnYoRzMSKLXHhIx8wsJ1zwzcxywgX/0tqcdQCTiHMxwrkY4VyMSD0XHsM3\nM8sJn+GbmeWEC76ZWU644NdA0kxJOyV1Jz87y/RZIuklSQck7Zf0rSxirRdJKyS9KemgpA1ltrdK\n2pps3ytpYfpRpqOKXNwj6fXkONglaUEWcaZholyU9FslKSQ15K2a1eRB0urkuDgg6Xd1DSgi/PqQ\nL+B+YEPS3gBsKtNnMbAoaV8F9AAzso79Ev3+TcDbwCeAFuBV4DOj+vwAeChp3wZszTruDHPxNWBq\n0v5+nnOR9JsOvADsAZZmHXdGx8Qi4O9AZ7L80XrG5DP82twEbEnaW4CbR3eIiLciojtpHwHeBcp+\nC+4ydB1wMCLeiYgB4DGKOSlVmqNtwI1qzIlkJ8xFRDwfEX3J4h5gXsoxpqWa4wLgx8Am4H9pBpei\navLwPeDBiDgFEBHv1jMgF/zazI6InqR9FJg9XmdJ11H8T/92vQNLyceAQyXLh5N1ZftExBBwBpiV\nSnTpqiYXpb4L/LGuEWVnwlxIuhaYHxHPpBlYyqo5JhYDiyW9KGmPpBX1DMiTmE9A0nPAnDKbNpYu\nRERIqniPq6S5wG+ANRExfGmjtMuJpO8AS4Hrs44lC5IKwAPA7RmHMhk0UxzWuYHiFd8Lkj4XEafr\ntTMbR0Qsq7RN0jFJcyOiJynoZS/HJF0BPANsjIg9dQo1C/8B5pcsz0vWletzWFIz0AGcTCe8VFWT\nCyQto3iycH1E9KcUW9omysV04LPA7mR0bw6wQ9LKiNiXWpT1V80xcRjYGxGDwL8kvUXxH8DL9QjI\nQzq12QGsSdprgKdGd5DUAjwJ/DoitqUYWxpeBhZJ+njye95GMSelSnN0K/CnSD6dajAT5kLSNcDD\nwMp6j9VmbNxcRMSZiOiKiIURsZDi5xmNVuyhur+P7RTP7pHURXGI5516BeSCX5v7gOWSuoFlyTKS\nlkp6JOmzGvgqcLukV5LXkmzCvbSSMfm7gGeBN4DfR8QBSfdKWpl0exSYJekgcA/Fu5kaTpW5+AnQ\nDjyeHAej//gbQpW5aHhV5uFZ4KSk14HngR9FRN2ugP1oBTOznPAZvplZTrjgm5nlhAu+mVlOuOCb\nmeWEC76ZWU644JuZ5YQLvplZTvwfFkxpToof4gkAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gNPM7yUc4CMh",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "cls = MiniBatchKMeans(n_clusters=5, random_state=random_state)\n",
        "cls.fit(features)\n",
        "\n",
        "\n",
        "# predict cluster labels for new dataset\n",
        "cls.predict(features)\n",
        "\n",
        "# to get cluster labels for the dataset used while\n",
        "# training the model (used for models that does not\n",
        "# support prediction on new dataset).\n",
        "cls.labels_\n",
        "\n",
        "\n",
        "# reduce the features to 2D\n",
        "pca = PCA(n_components=2, random_state=random_state)\n",
        "reduced_features = pca.fit_transform(features.toarray())\n",
        "\n",
        "# reduce the cluster centers to 2D\n",
        "reduced_cluster_centers = pca.transform(cls.cluster_centers_)\n",
        "\n",
        "\n",
        "plt.scatter(reduced_features[:,0], reduced_features[:,1], c=cls.predict(features))\n",
        "plt.scatter(reduced_cluster_centers[:, 0], reduced_cluster_centers[:,1], marker='x', s=150, c='b')"
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}